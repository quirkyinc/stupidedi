#!/usr/bin/env ruby
require "pathname"
$:.unshift(File.expand_path("../../lib", Pathname.new(__FILE__).realpath))

require "stupidedi"
require "pp"

# This will be auto-enabled when $stdout.tty?, but -C forces color output
require "term/ansicolor" if ARGV.delete("-C")

config = Stupidedi::Config.new
config.interchange.tap do |c|
  c.register("00401") { Stupidedi::Versions::Interchanges::FourOhOne::InterchangeDef }
  c.register("00501") { Stupidedi::Versions::Interchanges::FiveOhOne::InterchangeDef }
end

config.functional_group.tap do |c|
  c.register("004010") { Stupidedi::Versions::FunctionalGroups::FortyTen::FunctionalGroupDef }
  c.register("005010") { Stupidedi::Versions::FunctionalGroups::FiftyTen::FunctionalGroupDef }
end

config.transaction_set.tap do |c|
  c.register("004010", "SM", "204") { Stupidedi::Versions::FunctionalGroups::FortyTen::TransactionSetDefs::SM204 }
  c.register("004010", "GF", "990") { Stupidedi::Versions::FunctionalGroups::FortyTen::TransactionSetDefs::GF990 }

  c.register("005010", "HN", "277") { Stupidedi::Versions::FunctionalGroups::FiftyTen::TransactionSetDefs::HN277 }
  c.register("005010", "HP", "835") { Stupidedi::Versions::FunctionalGroups::FiftyTen::TransactionSetDefs::HP835 }
  c.register("005010", "HC", "837") { Stupidedi::Versions::FunctionalGroups::FiftyTen::TransactionSetDefs::HC837 }
  c.register("005010", "FA", "999") { Stupidedi::Versions::FunctionalGroups::FiftyTen::TransactionSetDefs::FA999 }

  c.register("004010",     "SM", "204") { Stupidedi::Guides::FortyTen::X12::SM204  }
  c.register("004010",     "GF", "990") { Stupidedi::Guides::FortyTen::X12::GF990  }
  c.register("005010X214", "HN", "277") { Stupidedi::Guides::FiftyTen::X214::HN277  }
  c.register("005010X221", "HP", "835") { Stupidedi::Guides::FiftyTen::X221::HP835  }
  c.register("005010X222", "HC", "837") { Stupidedi::Guides::FiftyTen::X222::HC837P }
  c.register("005010X231", "FA", "999") { Stupidedi::Guides::FiftyTen::X231::FA999  }

  c.register("005010X221A1", "HP", "835") { Stupidedi::Guides::FiftyTen::X221A1::HP835  }
  c.register("004010X098A1", "HC", "837") { Stupidedi::Guides::FiftyTen::X222A1::HC837P }
  c.register("005010X222A1", "HC", "837") { Stupidedi::Guides::FiftyTen::X222A1::HC837P }
  c.register("005010X231A1", "FA", "999") { Stupidedi::Guides::FiftyTen::X231A1::FA999  }
end

config.editor.tap do |c|
  c.register(Stupidedi::Versions::Interchanges::FourOhOne::InterchangeDef) { Stupidedi::Editor::FourOhOneEd }
  c.register(Stupidedi::Versions::Interchanges::FiveOhOne::InterchangeDef) { Stupidedi::Editor::FiveOhOneEd }
  c.register(Stupidedi::Versions::FunctionalGroups::FortyTen::FunctionalGroupDef) { Stupidedi::Editor::FortyTenEd }
  c.register(Stupidedi::Versions::FunctionalGroups::FiftyTen::FunctionalGroupDef) { Stupidedi::Editor::FiftyTenEd }
  c.register(Stupidedi::Guides::FiftyTen::X222::HC837P) { Stupidedi::Editor::X222 }
  c.register(Stupidedi::Guides::FiftyTen::X222A1::HC837P) { Stupidedi::Editor::X222 }
  c.register(Stupidedi::Guides::FortyTen::X12::SM204) { Stupidedi::Editor::X12 }
  c.register(Stupidedi::Guides::FortyTen::X12::GF990) { Stupidedi::Editor::X12 }
end

config = Stupidedi::Config.default
parser = Stupidedi::Builder::StateMachine.build(config)
start  = Time.now

ARGV.each do |path|
  File.open(path) do |io|
    parser, result = parser.read(Stupidedi::Reader.build(io))
  end
end

envelope_ed = Stupidedi::Editor::TransmissionEd.new(config, Time.now)
pp envelope_ed.critique(parser).results

stop = Time.now

begin
  a = parser.first
  b = parser.last

  a.flatmap{|a| b.flatmap{|b| a.distance(b) }}.
    tap{|d| puts "#{d + 1} segments" }
end

puts "%0.3f seconds" % (stop - start)
